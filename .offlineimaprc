[general]
pythonfile = ~/.offlineimap-helpers.py
ui = ttyui
accounts = Gmail, Dintero
fsync = False

[Account Gmail]
localrepository = Gmail-Local
remoterepository = Gmail-Remote
postsynchook = notmuch new
restoreatime = no

[Repository Gmail-Local]
type = Maildir
localfolders = ~/mail/frodeaa
nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'important':    '[Gmail]/Important',
                            'spam':    '[Gmail]/Spam',
                            'starred': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)
sep = /

[Repository Gmail-Remote]
maxconnections = 2
type = Gmail
remoteuser = frode.aa@gmail.com
auth_mechanisms = XOAUTH2
oauth2_client_id_eval = subprocess.check_output(["pass", "show", "frode.aa@gmail.com/client_id"]).strip()
oauth2_client_secret_eval = subprocess.check_output(["pass", "show", "frode.aa@gmail.com/client_secret"]).strip()
oauth2_refresh_token_eval = subprocess.check_output(["pass", "show", "frode.aa@gmail.com/refresh_token"]).strip()

realdelete = no
nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'starred',
                            '[Gmail]/Important':   'important',
                            '[Gmail]/Spam':   'spam',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Important',
                                             '[Gmail]/Starred',
                                             '[Gmail]/flagged',
                                             '[Gmail]/Chats',
                                             'flagged',
                                             ]
ssl = true
sslcacertfile = /usr/local/etc/openssl/cert.pem

[Account Dintero]
localrepository = Dintero-Local
remoterepository = Dintero-Remote
postsynchook = notmuch new
restoreatime = no

[Repository Dintero-Local]
type = Maildir
localfolders = ~/mail/dintero
nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'important':    '[Gmail]/Important',
                            'spam':    '[Gmail]/Spam',
                            'starred': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)
sep = /

[Repository Dintero-Remote]
maxconnections = 2
type = Gmail
remoteuser = frode@dintero.com
auth_mechanisms = XOAUTH2
oauth2_client_id_eval = subprocess.check_output(["pass", "show", "frode@dintero.com/client_id"]).strip()
oauth2_client_secret_eval = subprocess.check_output(["pass", "show", "frode@dintero.com/client_secret"]).strip()
oauth2_refresh_token_eval = subprocess.check_output(["pass", "show", "frode@dintero.com/refresh_token"]).strip()

realdelete = no
nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'starred',
                            '[Gmail]/Important':   'important',
                            '[Gmail]/Spam':   'spam',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Important',
                                             '[Gmail]/Starred',
                                             '[Gmail]/flagged',
                                             '[Gmail]/Chats',
                                             'flagged',
                                             ]
ssl = true
sslcacertfile = /usr/local/etc/openssl/cert.pem

[mbnames]
enabled = yes
filename = ~/.mutt/mailboxes
header = "mailboxes "
peritem = "+%(foldername)s"
sep = " "
footer = "\n"
